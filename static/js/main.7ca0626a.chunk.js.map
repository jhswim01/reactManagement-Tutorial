{"version":3,"sources":["components/CustomerDelete.js","components/Customer.js","components/CustomerAdd.js","components/MonthlyButtons.js","App.js","serviceWorker.js","index.js"],"names":["CustomerDelete","props","handleClickOpen","setState","open","handleClose","state","id","fetch","method","this","stateRefresh","Button","variant","color","onClick","Dialog","onClose","DialogTitle","DialogContent","Typography","gutterBottom","DialogActions","e","deleteCustomer","React","Component","CustomerAdd","addCustomer","formData","FormData","append","file","userName","birthday","gender","job","post","handleFormSubmit","preventDefault","then","response","console","log","data","fileName","handlefileChange","target","files","value","handleValueChange","nextState","name","classes","className","hidden","accept","type","onChange","htmlFor","component","TextField","label","input","withStyles","theme","display","App","sortCurData","month","raw_data","cur","sorted_data","i","length","MONTH","unshift","x","DAY","y","CURRENCY","calculateDomainRendered","sorted_cur","push","max","min","domain_rendered","Math","apply","customers","completed","searchKeyword","callApi","res","catch","err","a","json","body","callCurApi","progress","today","Date","useCanvas","data_rendered","getMonth","_month","VerticalBarSeriesCanvas","VerticalBarSeries","root","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","title","noWrap","button","handleMonthButtonClick","Paper","paper","graphTest","width","height","yDomain","xType","map","obj","toString","style","fontSize","labelAnchorX","labelAnchorY","TableRow","TableCell","colSpan","align","CircularProgress","maxmin","minWidth","marginTop","marginLeft","marginRight","paddingTop","table","tableHead","margin","spacing","unit","grow","flexGrow","menu","marginBottom","justifyContent","breakpoints","up","search","borderRadius","shape","backgroundColor","fade","palette","common","white","searchIcon","pointerEvents","alignItems","inputRoot","inputInput","padding","transition","transitions","create","sectionDesktop","sectionMobile","Boolean","window","location","hostname","match","createMuiTheme","typography","fontFamily","ReactDOM","render","MuiThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ca0626a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nclass CustomerDelete extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        }\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false\r\n        })\r\n    }\r\n\r\n    deleteCustomer(id) {\r\n        const url = '/api/customers/' + id;\r\n        fetch(url, {\r\n            method: 'DELETE'\r\n        });\r\n        this.props.stateRefresh();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickOpen}>삭제</Button>\r\n            <Dialog open={this.state.open} onClose={this.handleClose}>\r\n                <DialogTitle onClose={this.handleClose}>\r\n                     삭제 경고\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                      <Typography gutterBottom>\r\n                          선택한 고객 정보가 삭제됩니다.\r\n                      </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                      <Button variant=\"contained\" color=\"primary\" onClick={(e) => {this.deleteCustomer(this.props.id)}}>삭제</Button>\r\n                      <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>삭제</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CustomerDelete;","import React from 'react';\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport CustomerDelete from './CustomerDelete';\r\n\r\n\r\nclass Customer extends React.Component {\r\n    render() {\r\n        return (\r\n            <TableRow>\r\n                <TableCell>{this.props.id}</TableCell>\r\n                <TableCell><img src={this.props.image} alt=\"profile\"/></TableCell>\r\n                <TableCell>{this.props.name}</TableCell>\r\n                <TableCell>{this.props.birthday}</TableCell>\r\n                <TableCell>{this.props.gender}</TableCell>\r\n                <TableCell>{this.props.job}</TableCell>\r\n                <TableCell><CustomerDelete stateRefresh={this.props.stateRefresh} id={this.props.id}/></TableCell>\r\n            </TableRow>\r\n        )            \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Customer;","import React from 'react';\r\nimport { post } from 'axios';\r\nimport { responsiveFontSizes, withStyles } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n    hidden: {\r\n        display: 'none'\r\n    }\r\n})\r\n\r\nclass CustomerAdd extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            userName: \"\",\r\n            birthday: \"\",\r\n            gender: \"\",\r\n            job: \"\",\r\n            fileName: \"\",\r\n            open: false\r\n        }\r\n    }\r\n\r\n    addCustomer = () => {\r\n        const url = '/api/customers';\r\n        const formData = new FormData();\r\n        formData.append('image', this.state.file);\r\n        formData.append('name', this.state.userName);\r\n        formData.append('birthday', this.state.birthday);\r\n        formData.append('gender', this.state.gender);\r\n        formData.append('job', this.state.job);\r\n        const config = {\r\n            'content-type' : 'multipart/form-data'\r\n        }\r\n        return post(url, formData, config);\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n        \r\n        this.addCustomer()\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                this.props.stateRefresh();\r\n            });\r\n        this.setState({\r\n            file: null,\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: '',\r\n            fileName: '',\r\n            open: false\r\n        })\r\n    }\r\n\r\n    handlefileChange = (e) => {\r\n        \r\n        this.setState({\r\n            file: e.target.files[0],\r\n            fileName: e.target.value\r\n        })\r\n    }\r\n\r\n    handleValueChange = (e) => {\r\n        \r\n        let nextState = {};\r\n        nextState[e.target.name] = e.target.value;\r\n        this.setState(nextState);   \r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            file: null,\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: '',\r\n            fileName: '',\r\n            open: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                    고객 추가하기\r\n                </Button>\r\n                <Dialog open={this.state.open} onClose={this.handleClose}>\r\n                    <DialogTitle>고객 추가</DialogTitle>\r\n                    <DialogContent>\r\n                        <input className={classes.hidden} accept=\"image/*\" id=\"raised-button-file\" type=\"file\" file={this.state.file} value={this.state.fileName} onChange={this.handlefileChange}/><br/>\r\n                        <label htmlFor=\"raised-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" name=\"file\">\r\n                                {this.state.fileName === \"\" ? \"프로필 이미지 선택\" : this.state.fileName}\r\n                            </Button>\r\n                        </label>\r\n                        <br/>\r\n                        <TextField label = \"이름\" input type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange}/><br/>\r\n                        <TextField label = \"생년월일\" input type=\"text\" name=\"birthday\" value={this.state.birthday} onChange={this.handleValueChange}/><br/>\r\n                        <TextField label = \"성별\" input type=\"text\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange}/><br/>\r\n                        <TextField label = \"직업\" input type=\"text\" name=\"job\" value={this.state.job} onChange={this.handleValueChange}/><br/>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>추가</Button>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(CustomerAdd);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   button: {\r\n//     margin: theme.spacing(1),\r\n//   },\r\n//   input: {\r\n//     display: 'none',\r\n//   },\r\n// }));\r\n\r\n\r\n\r\nclass MonthlyButtons extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cur_data: null\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n\r\n\r\n        this.setState({\r\n            cur_data: null\r\n        })\r\n    }\r\n    \r\n\r\n    render() {\r\n        // const { classes } = this.props;\r\n        return (\r\n            <div>\r\n              <Button variant=\"outlined\" color=\"primary\" >\r\n                월\r\n              </Button>              \r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\n\r\nexport default MonthlyButtons;","import React from 'react';\nimport './App.css';\nimport Paper from '@material-ui/core/Paper';\nimport Customer from './components/Customer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withStyles } from '@material-ui/core/styles';\nimport { style } from '@material-ui/system';\nimport CustomerAdd from './components/CustomerAdd';\nimport MonthlyButtons from './components/MonthlyButtons'\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nimport {XYPlot, XAxis, YAxis, LabelSeries, VerticalGridLines, HorizontalGridLines, VerticalBarSeries,  VerticalBarSeriesCanvas, LineSeries} from 'react-vis';\n\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    minWidth: 1080\n  },\n  paper: {\n    marginTop: 18,\n    marginLeft: 18,\n    marginRight: 18\n  },\n  button: {\n    marginTop: 18,\n    marginLeft: 18,\n    marginRight: 18\n  },\n  graphTest:{\n    marginLeft: 35,\n    marginTop: 18,\n    paddingTop: 25 \n  },\n  maxmin:{\n    marginLeft: 35,\n    marginTop: 30,\n  },\n  table: {\n  },\n  tableHead: {\n    fontSize: '1.0rem'\n  },\n  progress: {\n    margin: theme.spacing.unit * 2\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menu: {\n    marginTop: 15,\n    marginBottom: 15,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  }\n})\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    var today = new Date();\n    this.state = {\n      customers: '',\n      completed: 0,\n      searchKeyword: '',\n      useCanvas: false,\n      cur: '',\n      data_rendered: null,\n      month: today.getMonth() + 1\n    }\n  }\n\n  sortCurData = (month) => {\n    var raw_data = this.state.cur;\n    var sorted_data = [];\n    // var sorted_data=[\n    //   {x: '8/25', y: 1123},\n    //   {x: '8/26', y: 1250},\n    //   {x: '8/27', y: 1180}\n    // ];;\n\n    for(var i=0; i<raw_data.length; i++) {\n    \n    if (raw_data[i].MONTH == month)\n      sorted_data.unshift({x: raw_data[i].MONTH+'/'+raw_data[i].DAY, y:raw_data[i].CURRENCY});\n    console.log(i);\n    }\n    // var sorted_data=[\n    //   {x: raw_data[0].MONTH, y: raw_data[0].CURRENCY},\n    //   {x: '8/26', y: 1250},\n    //   {x: '8/26', y: 1180}\n    // ];;\n\n    return sorted_data;\n  }\n\n  calculateDomainRendered = (month) => {\n    var sorted_data = this.sortCurData(month);\n    \n    var sorted_cur = [];\n    for (var i=0; i<sorted_data.length; i++){\n      sorted_cur.push(sorted_data[i].y);\n    }\n\n    var domain_rendered = [];\n    var max;\n    var min;\n    \n    min = Math.min.apply(null, sorted_cur)-10;\n    max = Math.max.apply(null, sorted_cur)+10;\n\n    domain_rendered.push(min);\n    domain_rendered.push(max);\n    console.log(domain_rendered);\n    return domain_rendered;\n  }\n\n  stateRefresh = () => {\n    this.setState({\n      customers: '',\n      completed: 0,\n      searchKeyword: ''\n    });\n    this.callApi()\n      .then(res => this.setState({customers: res}))\n      .catch(err => console.log(err));\n  }\n\n\n  componentDidMount() {\n    // this.timer = setInterval(this.progress, 20);\n    this.callApi()\n      .then(res => this.setState({customers: res}))\n      .catch(err => console.log(err));\n    this.callCurApi()\n      .then(res => this.setState({cur: res}))\n      .catch(err => console.log(err));\n\n    \n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/customers');\n    const body = await response.json();\n    return body; \n  }\n\n  callCurApi = async () => {\n    const response = await fetch('/api/currency');\n    const body = await response.json();\n    return body;\n  }\n\n  progress = () => {\n    const { completed } = this.state;\n    this.setState({ completed: completed >= 100 ? 0: completed + 1});\n  }\n\n  handleMonthButtonClick(_month) {\n    this.setState({\n      customers: '',\n      completed: 0,\n      searchKeyword: '',\n      useCanvas: false,\n      \n      data_rendered: null,\n      month: _month\n    })\n    \n  }\n\n  handleValueChange = (e) => {\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }\n\n  render() {\n    const filteredComponents = (data) => {\n      data = data.filter((c) => {\n        return c.name.indexOf(this.state.searchKeyword) > -1;\n      });\n      return data.map((c) => {\n        return <Customer stateRefresh={this.stateRefresh} key={c.id} id={c.id} image={c.image} name={c.name} birthday={c.birthday} gender={c.gender} job={c.job} />\n      });\n    }\n    const {useCanvas} = this.state;\n    const BarSeries = useCanvas ? VerticalBarSeriesCanvas : VerticalBarSeries;\n    const { classes } = this.props;\n    const cellList = ['번호', \"프로필 이미지\", \"이름\", \"생년월일\", \"성별\", \"직업\", \"설정\"];\n    const data_= [\n      {x: '8/25', y: 1123},\n      {x: '8/26', y: 1250},\n      {x: '8/27', y: 1180}\n    ];\n    var month = this.state.month;\n    var sorted_data = this.state.cur ? this.sortCurData(month) : [];\n    var domain_rendered = this.state.cur ? this.calculateDomainRendered(month) : [];\n\n    return (\n      <div className={classes.root}>\n      \n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            환율 조회 서비스\n          </Typography>\n          \n          {/* <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"검색하기…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              name = \"searchKeyword\"\n              value = {this.state.searchKeyword}\n              onChange={this.handleValueChange}\n            />\n          </div> */}\n          {/* <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              // aria-controls={menuId}\n              aria-haspopup=\"true\"\n              // onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              // aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              // onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div> */}\n        </Toolbar>\n      </AppBar>\n      {/* <div className={classes.menu}>\n        <CustomerAdd stateRefresh={this.stateRefresh}/>\n      </div> */}\n      <div className={classes.button}>\n      <div>\n        <Button color=\"primary\" onClick={() => { this.handleMonthButtonClick(1) }}>\n          1월\n        </Button>\n        <Button color=\"primary\" onClick={() => { this.handleMonthButtonClick(2) }}>\n          2월\n        </Button>\n        <Button color=\"primary\" onClick={() => { this.handleMonthButtonClick(3) }}>\n          3월\n        </Button>\n        <Button color=\"primary\"  onClick={() => { this.handleMonthButtonClick(4) }}>\n          4월\n        </Button>\n        <Button color=\"primary\"  onClick={() => { this.handleMonthButtonClick(5) }}>\n          5월\n        </Button>\n        <Button  color=\"primary\"  onClick={() => { this.handleMonthButtonClick(6) }}>\n          6월\n        </Button>\n        <Button color=\"primary\"  onClick={() => { this.handleMonthButtonClick(7) }}>\n          7월\n        </Button>\n        <Button  color=\"primary\" onClick={() => { this.handleMonthButtonClick(8) }}>\n          8월\n        </Button>\n        <Button  color=\"primary\" onClick={() => { this.handleMonthButtonClick(9) }}>\n          9월\n        </Button>\n        <Button  color=\"primary\" onClick={() => { this.handleMonthButtonClick(10) }}>\n          10월\n        </Button>\n        <Button color=\"primary\"  onClick={() => { this.handleMonthButtonClick(11) }}>\n          11월\n        </Button>\n        <Button color=\"primary\"  onClick={() => { this.handleMonthButtonClick(12) }}>\n          12월\n        </Button>\n      </div>\n      </div>\n      <Paper className={classes.paper}>\n        {this.state.cur ? \n          <div className={classes.graphTest}>\n          <XYPlot\n            width={1800}\n            height={500}\n            yDomain={domain_rendered}\n            xType=\"ordinal\">        \n          <HorizontalGridLines />\n          <VerticalBarSeries\n            data={sorted_data}/>\n          <LabelSeries\n              data={sorted_data.map(obj => {\n                  return { ...obj, label: obj.y.toString(), style: {fontSize: 13} }\n              })}\n              labelAnchorX=\"middle\"\n              labelAnchorY=\"text-after-edge\"\n                  />\n          <XAxis />\n          <YAxis />\n          </XYPlot>\n        </div> :\n        <TableRow>\n        <TableCell colSpan=\"6\" align=\"center\">\n           <CircularProgress className={classes.progress} variant=\"determinate\" value={this.state.completed}/>\n        </TableCell>\n        </TableRow>\n        }\n      \n          {/* <Table className={classes.table}>\n            <TableHead>\n              {cellList.map(c => {\n                return <TableCell className={classes.tableHead}>{c}</TableCell>\n              })}\n            </TableHead>\n            <TableBody>              \n                {this.state.customers ?\n                  filteredComponents(this.state.customers) : \n                  <TableRow>\n                    <TableCell colSpan=\"6\" align=\"center\">\n                       <CircularProgress className={classes.progress} variant=\"determinate\" value={this.state.completed}/>\n                    </TableCell>\n                  </TableRow>\n                  }  \n            </TableBody>\n          </Table> */}\n    </Paper >\n      <div className={classes.maxmin}>\n        {month}월 최고 환율 : {domain_rendered[1]-10}\n      </div>\n      <div className={classes.maxmin}>\n        {month}월 최저 환율 : {domain_rendered[0]+10}\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: '\"Noto Sans KR\", serif',\n    }\n})\n\nReactDOM.render(<MuiThemeProvider theme={theme}><App /></MuiThemeProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}